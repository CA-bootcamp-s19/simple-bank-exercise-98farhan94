{
  "contractName": "SimpleBank",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "LogDepositMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "LogEnrolled",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "enroll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "withdrawAmount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"LogDepositMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"LogEnrolled\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enroll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"deposit()\":{\"return\":\"The balance of the user after the deposit is made\"},\"enroll()\":{\"return\":\"The users enrolled status\"},\"getBalance()\":{\"return\":\"The balance of the user\"},\"withdraw(uint256)\":{\"details\":\"This does not return any excess ether sent to it\",\"params\":{\"withdrawAmount\":\"amount you want to withdraw\"},\"return\":\"The balance remaining for the user\"}}},\"userdoc\":{\"methods\":{\"deposit()\":{\"notice\":\"Deposit ether into bank\"},\"enroll()\":{\"notice\":\"Enroll a customer with the bank\"},\"getBalance()\":{\"notice\":\"Get balance\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw ether from bank\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/farhan/Documents/GitHub/simple-bank-exercise-98farhan94/contracts/SimpleBank.sol\":\"SimpleBank\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/farhan/Documents/GitHub/simple-bank-exercise-98farhan94/contracts/SimpleBank.sol\":{\"keccak256\":\"0xf2a969550245843aff18a4e2b3fc07fae44e0428ea2420a90310515a99b73888\",\"urls\":[\"bzz-raw://00bfb414fa3803158ff1380487bcacf8273dd88416a8961b8b725de1e0fbd965\",\"dweb:/ipfs/QmSczahQAwuViA5dq7ufNb4HUm1xPZa1W4w3rVmWioiJ9e\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610163806100206000396000f3fe60806040526004361061003f5760003560e01c806312065fe0146100445780632e1a7d4d1461006f578063d0e30db0146100be578063e65f2a7e146100e9575b600080fd5b34801561005057600080fd5b50610059610118565b6040518082815260200191505060405180910390f35b34801561007b57600080fd5b506100a86004803603602081101561009257600080fd5b810190808035906020019092919050505061011d565b6040518082815260200191505060405180910390f35b3480156100ca57600080fd5b506100d3610124565b6040518082815260200191505060405180910390f35b3480156100f557600080fd5b506100fe610129565b604051808215151515815260200191505060405180910390f35b600090565b6000919050565b600090565b60009056fea265627a7a7231582074f7ae4fcdd11957a298f47df59a95cad0ad3ddeb364ae298ce3f7395a82c1b764736f6c63430005100032",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c806312065fe0146100445780632e1a7d4d1461006f578063d0e30db0146100be578063e65f2a7e146100e9575b600080fd5b34801561005057600080fd5b50610059610118565b6040518082815260200191505060405180910390f35b34801561007b57600080fd5b506100a86004803603602081101561009257600080fd5b810190808035906020019092919050505061011d565b6040518082815260200191505060405180910390f35b3480156100ca57600080fd5b506100d3610124565b6040518082815260200191505060405180910390f35b3480156100f557600080fd5b506100fe610129565b604051808215151515815260200191505060405180910390f35b600090565b6000919050565b600090565b60009056fea265627a7a7231582074f7ae4fcdd11957a298f47df59a95cad0ad3ddeb364ae298ce3f7395a82c1b764736f6c63430005100032",
  "sourceMap": "228:3105:1:-;;;1247:88;8:9:-1;5:2;;;30:1;27;20:12;5:2;1247:88:1;228:3105;;;;;;",
  "deployedSourceMap": "228:3105:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1677:8;;;1892:115;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1892:115:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2998:332;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2998:332:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2998:332:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2554:188;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2554:188:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2137:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2137:46:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1892:115;1930:4;1892:115;:::o;2998:332::-;3053:4;2998:332;;;:::o;2554:188::-;2589:4;2554:188;:::o;2137:46::-;2171:4;2137:46;:::o",
  "source": "/*\n    This exercise has been updated to use Solidity version 0.6.12\n    Breaking changes from 0.5 to 0.6 can be found here: \n    https://solidity.readthedocs.io/en/v0.6.12/060-breaking-changes.html\n*/\n\npragma solidity ^0.5.0;\n\ncontract SimpleBank {\n\n    //\n    // State variables\n    //\n    \n    /* Fill in the keyword. Hint: We want to protect our users balance from other contracts*/\n    mapping (address => uint) balances;\n    \n    /* Fill in the keyword. We want to create a getter function and allow contracts to be able to see if a user is enrolled.  */\n    mapping (address => bool) enrolled;\n\n    /* Let's make sure everyone knows who owns the bank. Use the appropriate keyword for this*/\n    address owner;\n    \n    //\n    // Events - publicize actions to external listeners\n    //\n    \n    /* Add an argument for this event, an accountAddress */\n    event LogEnrolled();\n\n    /* Add 2 arguments for this event, an accountAddress and an amount */\n    event LogDepositMade();\n\n    /* Create an event called LogWithdrawal */\n    /* Add 3 arguments for this event, an accountAddress, withdrawAmount and a newBalance */\n\n\n    //\n    // Functions\n    //\n\n    /* Use the appropriate global variable to get the sender of the transaction */\n    constructor() public {\n        /* Set the owner to the creator of this contract */\n    }\n\n    // Fallback function - Called if other functions don't match call or\n    // sent ether without data\n    // Typically, called when invalid data is sent\n    // Added so ether sent to this contract is reverted if the contract fails\n    // otherwise, the sender's money is transferred to contract\n    function () external payable {\n        revert();\n    }\n\n    /// @notice Get balance\n    /// @return The balance of the user\n    // A SPECIAL KEYWORD prevents function from editing state variables;\n    // allows function to run locally/off blockchain\n    function getBalance() public returns (uint) {\n        /* Get the balance of the sender of this transaction */\n    }\n\n    /// @notice Enroll a customer with the bank\n    /// @return The users enrolled status\n    // Emit the appropriate event\n    function enroll() public returns (bool){\n    }\n\n    /// @notice Deposit ether into bank\n    /// @return The balance of the user after the deposit is made\n    // Add the appropriate keyword so that this function can receive ether\n    // Use the appropriate global variables to get the transaction sender and value\n    // Emit the appropriate event    \n    // Users should be enrolled before they can make deposits\n    function deposit() public returns (uint) {\n        /* Add the amount to the user's balance, call the event associated with a deposit,\n          then return the balance of the user */\n    }\n\n    /// @notice Withdraw ether from bank\n    /// @dev This does not return any excess ether sent to it\n    /// @param withdrawAmount amount you want to withdraw\n    /// @return The balance remaining for the user\n    // Emit the appropriate event    \n    function withdraw(uint withdrawAmount) public returns (uint) {\n        /* If the sender's balance is at least the amount they want to withdraw,\n           Subtract the amount from the sender's balance, and try to send that amount of ether\n           to the user attempting to withdraw. \n           return the user's balance.*/\n    }\n\n}\n",
  "sourcePath": "/Users/farhan/Documents/GitHub/simple-bank-exercise-98farhan94/contracts/SimpleBank.sol",
  "ast": {
    "absolutePath": "/Users/farhan/Documents/GitHub/simple-bank-exercise-98farhan94/contracts/SimpleBank.sol",
    "exportedSymbols": {
      "SimpleBank": [
        110
      ]
    },
    "id": 111,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "203:23:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 110,
        "linearizedBaseContracts": [
          110
        ],
        "name": "SimpleBank",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 62,
            "name": "balances",
            "nodeType": "VariableDeclaration",
            "scope": 110,
            "src": "391:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 61,
              "keyType": {
                "id": 59,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "400:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "391:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 60,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "411:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 66,
            "name": "enrolled",
            "nodeType": "VariableDeclaration",
            "scope": 110,
            "src": "565:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 65,
              "keyType": {
                "id": 63,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "574:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "565:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 64,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "585:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 68,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 110,
            "src": "702:13:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 67,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "702:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 70,
            "name": "LogEnrolled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "878:2:1"
            },
            "src": "861:20:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 72,
            "name": "LogDepositMade",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "981:2:1"
            },
            "src": "961:23:1"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "1268:67:1",
              "statements": []
            },
            "documentation": null,
            "id": 76,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1258:2:1"
            },
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1268:0:1"
            },
            "scope": 110,
            "src": "1247:88:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "1667:25:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 79,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        130,
                        131
                      ],
                      "referencedDeclaration": 130,
                      "src": "1677:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1677:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "1677:8:1"
                }
              ]
            },
            "documentation": null,
            "id": 83,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1647:2:1"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1667:0:1"
            },
            "scope": 110,
            "src": "1638:54:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "1936:71:1",
              "statements": []
            },
            "documentation": "@notice Get balance\n @return The balance of the user",
            "id": 89,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1911:2:1"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1930:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1930:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1929:6:1"
            },
            "scope": 110,
            "src": "1892:115:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "2176:7:1",
              "statements": []
            },
            "documentation": "@notice Enroll a customer with the bank\n @return The users enrolled status",
            "id": 95,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enroll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2152:2:1"
            },
            "returnParameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "2171:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2171:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2170:6:1"
            },
            "scope": 110,
            "src": "2137:46:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "2595:147:1",
              "statements": []
            },
            "documentation": "@notice Deposit ether into bank\n @return The balance of the user after the deposit is made",
            "id": 101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2570:2:1"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "2589:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2589:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2588:6:1"
            },
            "scope": 110,
            "src": "2554:188:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "3059:271:1",
              "statements": []
            },
            "documentation": "@notice Withdraw ether from bank\n @dev This does not return any excess ether sent to it\n @param withdrawAmount amount you want to withdraw\n @return The balance remaining for the user",
            "id": 109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "name": "withdrawAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "3016:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3016:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3015:21:1"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "3053:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3053:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3052:6:1"
            },
            "scope": 110,
            "src": "2998:332:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 111,
        "src": "228:3105:1"
      }
    ],
    "src": "203:3131:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/farhan/Documents/GitHub/simple-bank-exercise-98farhan94/contracts/SimpleBank.sol",
    "exportedSymbols": {
      "SimpleBank": [
        110
      ]
    },
    "id": 111,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "203:23:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 110,
        "linearizedBaseContracts": [
          110
        ],
        "name": "SimpleBank",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 62,
            "name": "balances",
            "nodeType": "VariableDeclaration",
            "scope": 110,
            "src": "391:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 61,
              "keyType": {
                "id": 59,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "400:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "391:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 60,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "411:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 66,
            "name": "enrolled",
            "nodeType": "VariableDeclaration",
            "scope": 110,
            "src": "565:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 65,
              "keyType": {
                "id": 63,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "574:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "565:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 64,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "585:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 68,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 110,
            "src": "702:13:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 67,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "702:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 70,
            "name": "LogEnrolled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "878:2:1"
            },
            "src": "861:20:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 72,
            "name": "LogDepositMade",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "981:2:1"
            },
            "src": "961:23:1"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "1268:67:1",
              "statements": []
            },
            "documentation": null,
            "id": 76,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1258:2:1"
            },
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1268:0:1"
            },
            "scope": 110,
            "src": "1247:88:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "1667:25:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 79,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        130,
                        131
                      ],
                      "referencedDeclaration": 130,
                      "src": "1677:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1677:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "1677:8:1"
                }
              ]
            },
            "documentation": null,
            "id": 83,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1647:2:1"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1667:0:1"
            },
            "scope": 110,
            "src": "1638:54:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "1936:71:1",
              "statements": []
            },
            "documentation": "@notice Get balance\n @return The balance of the user",
            "id": 89,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1911:2:1"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1930:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1930:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1929:6:1"
            },
            "scope": 110,
            "src": "1892:115:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "2176:7:1",
              "statements": []
            },
            "documentation": "@notice Enroll a customer with the bank\n @return The users enrolled status",
            "id": 95,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enroll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2152:2:1"
            },
            "returnParameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "2171:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2171:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2170:6:1"
            },
            "scope": 110,
            "src": "2137:46:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "2595:147:1",
              "statements": []
            },
            "documentation": "@notice Deposit ether into bank\n @return The balance of the user after the deposit is made",
            "id": 101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2570:2:1"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "2589:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2589:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2588:6:1"
            },
            "scope": 110,
            "src": "2554:188:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "3059:271:1",
              "statements": []
            },
            "documentation": "@notice Withdraw ether from bank\n @dev This does not return any excess ether sent to it\n @param withdrawAmount amount you want to withdraw\n @return The balance remaining for the user",
            "id": 109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "name": "withdrawAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "3016:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3016:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3015:21:1"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "3053:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3053:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3052:6:1"
            },
            "scope": 110,
            "src": "2998:332:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 111,
        "src": "228:3105:1"
      }
    ],
    "src": "203:3131:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "1606758662620": {
      "events": {
        "0x8038576435f0e365f39497b3c0a20a6003fb1faf839da4fe2ee2372fc684b2d6": {
          "anonymous": false,
          "inputs": [],
          "name": "LogDepositMade",
          "type": "event"
        },
        "0x6e6775f0cd99d66a7638833e0cf89d3d05958e4bbb550a530c9488c7515771ea": {
          "anonymous": false,
          "inputs": [],
          "name": "LogEnrolled",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x32d331E5f4B878d67F2293cC634B5c9B78144e41",
      "transactionHash": "0xb4f061535766a917c294ab824f41ae7e7e50de052707d850886f0e20893ada72"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-11-30T17:52:08.877Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "deposit()": {
        "return": "The balance of the user after the deposit is made"
      },
      "enroll()": {
        "return": "The users enrolled status"
      },
      "getBalance()": {
        "return": "The balance of the user"
      },
      "withdraw(uint256)": {
        "details": "This does not return any excess ether sent to it",
        "params": {
          "withdrawAmount": "amount you want to withdraw"
        },
        "return": "The balance remaining for the user"
      }
    }
  },
  "userdoc": {
    "methods": {
      "deposit()": {
        "notice": "Deposit ether into bank"
      },
      "enroll()": {
        "notice": "Enroll a customer with the bank"
      },
      "getBalance()": {
        "notice": "Get balance"
      },
      "withdraw(uint256)": {
        "notice": "Withdraw ether from bank"
      }
    }
  }
}